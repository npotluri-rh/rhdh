# Copyright Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: PR

on:
  pull_request_target:
      types: [opened, synchronize, reopened, ready_for_review]
      branches: 
      - saelights-steps

env:
  TURBO_SCM_BASE: ${{ github.event.pull_request.base.sha }}
  TURBO_SCM_HEAD: ${{ github.sha }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # authorize:
  #   # The 'external' environment is configured with the odo-maintainers team as required reviewers.
  #   # All the subsequent jobs in this workflow 'need' this job, which will require manual approval for PRs coming from external forks.
  #   # see list of approvers in OWNERS file
  #   environment:
  #     ${{ (github.event.pull_request.head.repo.full_name == github.repository ||
  #       contains(fromJSON('["subhashkhileri","nickboldt","rm3l","openshift-cherrypick-robot"]'), github.actor)) && 'internal' || 'external' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: approved
  #       run: |
  #         echo "âœ“"

  build:
    name: Build with Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    #needs: authorize
    strategy:
      matrix:
        node-version: [22]
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Check Image and Relevant Changes
        id: check-image
        uses: ./.github/actions/check-image-and-changes

      - name: Setup Node.js
        if: ${{ steps.check-image.outputs.is_skipped != 'true' }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://registry.npmjs.org"

      - name: Setup local Turbo cache
        if: ${{ steps.check-image.outputs.is_skipped != 'true' }}
        uses: dtinth/setup-github-actions-caching-for-turbo@cc723b4600e40a6b8815b65701d8614b91e2669e # v1

      - name: Use app-config.example.yaml
        if: ${{ steps.check-image.outputs.is_skipped != 'true' }}
        run: rm app-config.yaml && mv app-config.example.yaml app-config.yaml

      - name: Install dependencies
        if: ${{ steps.check-image.outputs.is_skipped != 'true' }}
        uses: backstage/actions/yarn-install@b3c1841fd69e1658ac631afafd0fb140a2309024 # v0.6.17
        with:
          cache-prefix: ${{ runner.os }}-v${{ matrix.node-version }}

      - name: Build packages
        if: ${{ steps.check-image.outputs.is_skipped != 'true' }}
        run: yarn run build --continue --affected

  test:
    name: Test with Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    #needs: authorize
    strategy:
      matrix:
        node-version: [22]
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Check Image and Relevant Changes
        id: check-image
        uses: ./.github/actions/check-image-and-changes

      - name: Setup Node.js
        if: ${{ steps.check-image.outputs.is_skipped != 'true' }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://registry.npmjs.org"

      - name: Setup local Turbo cache
        if: ${{ steps.check-image.outputs.is_skipped != 'true' }}
        uses: dtinth/setup-github-actions-caching-for-turbo@cc723b4600e40a6b8815b65701d8614b91e2669e # v1

      - name: Use app-config.example.yaml
        if: ${{ steps.check-image.outputs.is_skipped != 'true' }}
        run: rm app-config.yaml && mv app-config.example.yaml app-config.yaml

      - name: Install dependencies
        if: ${{ steps.check-image.outputs.is_skipped != 'true' }}
        uses: backstage/actions/yarn-install@b3c1841fd69e1658ac631afafd0fb140a2309024 # v0.6.17
        with:
          cache-prefix: ${{ runner.os }}-v${{ matrix.node-version }}

      - name: Run prettier
        if: ${{ steps.check-image.outputs.is_skipped != 'true' }}
        run: yarn prettier:check --continue --affected

      - name: Run lint
        if: ${{ steps.check-image.outputs.is_skipped != 'true' }}
        run: yarn run lint:check --continue --affected

      - name: Run monorepo tools
        if: ${{ steps.check-image.outputs.is_skipped != 'true' }}
        run: yarn run monorepo:check

      - name: Regenerate dockerfiles
        if: ${{ steps.check-image.outputs.is_skipped != 'true' }}
        run: |
          yarn run build:dockerfile; if [[ $(git diff --name-only | grep Dockerfile || true) != "" ]]; then \
            echo "ERROR: Workspace is dirty! Must run 'yarn build:dockerfile' and commit changes!"; exit 1; \
          fi

      - name: Install jest-junit
        run: yarn add --dev jest-junit

      - name: Install istanbul-merge
        run: yarn add --dev istanbul-merge

      - name: Install SeaLights Agent
        run: |
          npm show slnodejs dist-tags
          npm install slnodejs@latest

      - name: SeaLights config
        env:
          SEALIGHTS_AGENT_TOKEN: ${{ secrets.SEALIGHTS_AGENT_TOKEN }}
          SL_BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
          SL_APP_NAME: "rhdh"
        run: |
          if [ -n "${{ github.event.pull_request.number }}" ]; then
            BUILD_SESSION_ID="pr-${{ github.event.pull_request.number }}-${{ github.sha }}"
          else
            BUILD_SESSION_ID="build-${{ github.sha }}"
          fi
          echo "BUILD_SESSION_ID=${BUILD_SESSION_ID}" >> $GITHUB_ENV

          npx slnodejs prConfig --appName rhdh --targetBranch  $SL_BRANCH_NAME --repositoryUrl ${{ github.event.pull_request.head.repo.clone_url }} --latestCommit ${{ env.SHORT_SHA }} --pullRequestNumber ${{ github.event.number }} --token $SEALIGHTS_AGENT_TOKEN

      - name: SeaLights initial scan
        run: npx slnodejs scan --buildsessionid $BUILD_SESSION_ID --scm git --workspacepath "." --token ${{ secrets.SEALIGHTS_AGENT_TOKEN }} --babylonPlugins "jsx,typescript"

      - name: SeaLights tests start
        run: npx slnodejs start --teststage unittests --buildsessionid $BUILD_SESSION_ID --token ${{ secrets.SEALIGHTS_AGENT_TOKEN }}

      - name: Run tests
        if: ${{ steps.check-image.outputs.is_skipped != 'true' }}
        run: yarn run test --continue --affected

      - name: Install dynamic plugin dependencies
        if: ${{ steps.check-image.outputs.is_skipped != 'true' }}
        run: cd ./dynamic-plugins && yarn install && cd ..

      - name: Verify dynamic plugin wrappers
        if: ${{ steps.check-image.outputs.is_skipped != 'true' }}
        run: cd ./dynamic-plugins && yarn test && cd ..

      - name: SeaLights upload results
        run: npx slnodejs uploadReports --teststage unittests --buildsessionid $BUILD_SESSION_ID --reportfile packages/backend/junit.xml --reportfile packages/app/junit.xml --token ${{ secrets.SEALIGHTS_AGENT_TOKEN }}

      - name: Merge tests coverage reports
        run: npx  istanbul-merge --out coverage.json packages/backend/coverage/coverage-final.json packages/app/coverage/coverage-final.json

      - name: SeaLights upload coverage
        run: npx slnodejs nycReport --teststage unittests --buildsessionid $BUILD_SESSION_ID --report coverage.json --token ${{ secrets.SEALIGHTS_AGENT_TOKEN }}

      - name: SeaLights tests end
        run: npx slnodejs end --buildsessionid $BUILD_SESSION_ID --token ${{ secrets.SL_TOKEN }}